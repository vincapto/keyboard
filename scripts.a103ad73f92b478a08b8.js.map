{"version":3,"file":"scripts.a103ad73f92b478a08b8.js","mappings":"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","sources":["webpack://layout/./src/sas.ts","webpack://layout/./src/keyboard.ts","webpack://layout/./src/keys.ts","webpack://layout/./src/index.ts","webpack://layout/./src/virtual.ts"],"sourcesContent":["var a = 123465464654;\r\nconsole.log(a);\r\nexport default a;\r\n","function createKeyboard(keys) {\r\n    return \"\\n  <div class='keyboard'>\".concat(keys, \"</div>\\n  <textarea class=\\\"textArea\\\" rows=\\\"4\\\" cols=\\\"50\\\">\\n  \");\r\n}\r\nfunction createKeyboardNode() {\r\n    var div = document.createElement('div');\r\n    div.className = 'keyboard';\r\n    return div;\r\n}\r\nfunction createContainer(panelName) {\r\n    var div = document.createElement('div');\r\n    div.className = panelName;\r\n    return div;\r\n}\r\nvar keyboardTamplate = {\r\n    1: [\r\n        { arr: 'Backquote Digit1 Digit2 Digit3 Digit4 Digit5 Digit6 Digit7 Digit8 Digit9 Digit0 Minus Equal', type: 'num' },\r\n        { arr: 'Backspace', type: 'func' },\r\n    ],\r\n    2: [\r\n        { arr: 'Tab', type: 'func' },\r\n        { arr: 'KeyQ KeyW KeyE KeyR KeyT KeyY KeyU KeyI KeyO KeyP', type: 'letter' },\r\n        { arr: 'Delete', type: 'func' },\r\n    ],\r\n    3: [\r\n        { arr: 'CapsLock', type: 'func' },\r\n        { arr: 'KeyA KeyS KeyD KeyF KeyG KeyH KeyJ KeyK KeyL', type: 'letter' },\r\n        { arr: 'Enter', type: 'func' },\r\n    ],\r\n    4: [\r\n        { arr: 'ShiftLeft', type: 'func' },\r\n        { arr: 'KeyZ KeyX KeyC KeyV KeyB KeyN KeyM Comma Period Slash', type: 'letter' },\r\n        { arr: 'ArrowUp ShiftRight', type: 'func' },\r\n    ],\r\n    5: [{ arr: 'ControlLeft AltLeft Space ArrowLeft ArrowDown ArrowRight AltRight ControlRight', type: 'func' }],\r\n};\r\nfunction createKeyNode(text, code, className, type) {\r\n    var div = document.createElement('div');\r\n    div.className = className;\r\n    div.innerHTML = text;\r\n    div.dataset.type = type;\r\n    div.dataset.code = code;\r\n    div.dataset.name = text;\r\n    return div;\r\n}\r\nfunction createKey(text) {\r\n    return \"\\n  <div class='key btn'>\".concat(text, \"</div>\\n  \");\r\n}\r\nexport { createKey, createKeyboard, createKeyNode, createKeyboardNode, createContainer, keyboardTamplate };\r\n","var allCodes = {\r\n    Backspace: 'Backspace',\r\n    Tab: 'Tab',\r\n    Enter: 'Enter',\r\n    ShiftLeft: 'Shift',\r\n    ControlLeft: 'Control',\r\n    ShiftRight: 'Shift',\r\n    ControlRight: 'Control',\r\n    AltLeft: 'Alt',\r\n    AltRight: 'Alt',\r\n    CapsLock: 'CapsLock',\r\n    Escape: 'Escape',\r\n    Space: 'Space',\r\n    ArrowLeft: 'Left',\r\n    ArrowUp: 'Up',\r\n    ArrowRight: 'Right',\r\n    ArrowDown: 'Down',\r\n    Delete: 'Delete',\r\n    Digit0: '0',\r\n    Digit1: '1',\r\n    Digit2: '2',\r\n    Digit3: '3',\r\n    Digit4: '4',\r\n    Digit5: '5',\r\n    Digit6: '6',\r\n    Digit7: '7',\r\n    Digit8: '8',\r\n    Digit9: '9',\r\n    KeyA: 'a',\r\n    KeyB: 'b',\r\n    KeyC: 'c',\r\n    KeyD: 'd',\r\n    KeyE: 'e',\r\n    KeyF: 'f',\r\n    KeyG: 'g',\r\n    KeyH: 'h',\r\n    KeyI: 'i',\r\n    KeyJ: 'j',\r\n    KeyK: 'k',\r\n    KeyL: 'l',\r\n    KeyM: 'm',\r\n    KeyN: 'n',\r\n    KeyO: 'o',\r\n    KeyP: 'p',\r\n    KeyQ: 'q',\r\n    KeyR: 'r',\r\n    KeyS: 's',\r\n    KeyT: 't',\r\n    KeyU: 'u',\r\n    KeyV: 'v',\r\n    KeyW: 'w',\r\n    KeyX: 'x',\r\n    KeyY: 'y',\r\n    KeyZ: 'z',\r\n    Semicolon: ';',\r\n    Quote: \"'\",\r\n    Backslash: '\\\\',\r\n    Comma: ',',\r\n    Period: '.',\r\n    Slash: '/',\r\n    Backquote: '`',\r\n    Minus: '-',\r\n    Equal: '=',\r\n    // Backspace: 8,\r\n    // Tab: 9,\r\n    // Enter: 13,\r\n    // Shift: 16,\r\n    // Ctrl: 17,\r\n    // Alt: 18,\r\n    // CapsLock: 20,\r\n    // Space: 32,\r\n    // Left: 37,\r\n    // Up: 38,\r\n    // Right: 39,\r\n    // Down: 40,\r\n    // Delete: 46,\r\n    // '`': 192,\r\n    // '1': 49,\r\n    // '2': 50,\r\n    // '3': 51,\r\n    // '4': 52,\r\n    // '5': 53,\r\n    // '6': 54,\r\n    // '7': 55,\r\n    // '8': 56,\r\n    // '9': 57,\r\n    // '0': 48,\r\n    // '-': 189,\r\n    // '=': 187,\r\n    // a: 65,\r\n    // b: 66,\r\n    // c: 67,\r\n    // d: 68,\r\n    // e: 69,\r\n    // f: 70,\r\n    // g: 71,\r\n    // h: 72,\r\n    // i: 73,\r\n    // j: 74,\r\n    // k: 75,\r\n    // l: 76,\r\n    // m: 77,\r\n    // n: 78,\r\n    // o: 79,\r\n    // p: 80,\r\n    // q: 81,\r\n    // r: 82,\r\n    // s: 83,\r\n    // t: 84,\r\n    // u: 85,\r\n    // v: 86,\r\n    // w: 87,\r\n    // x: 88,\r\n    // y: 89,\r\n    // z: 90,\r\n    // leftwindowkey: 91,\r\n    // rightwindowkey: 92,\r\n    // selectkey: 93,\r\n    // numpad0: 96,\r\n    // numpad1: 97,\r\n    // numpad2: 98,\r\n    // numpad3: 99,\r\n    // numpad4: 100,\r\n    // numpad5: 101,\r\n    // numpad6: 102,\r\n    // numpad7: 103,\r\n    // numpad8: 104,\r\n    // numpad9: 105,\r\n    // multiply: 106,\r\n    // add: 107,\r\n    // subtract: 109,\r\n    // decimalpoint: 110,\r\n    // divide: 111,\r\n    // f1: 112,\r\n    // f2: 113,\r\n    // f3: 114,\r\n    // f4: 115,\r\n    // f5: 116,\r\n    // f6: 117,\r\n    // f7: 118,\r\n    // f8: 119,\r\n    // f9: 120,\r\n    // f10: 121,\r\n    // f11: 122,\r\n    // f12: 123,\r\n    // numlock: 144,\r\n    // scrolllock: 145,\r\n    // semicolon: 186,\r\n    // equalsign: 187,\r\n    // comma: 188,\r\n    // dash: 189,\r\n    // period: 190,\r\n    // forwardslash: 191,\r\n    // graveaccent: 192,\r\n    // openbracket: 219,\r\n    // backslash: 220,\r\n    // closebracket: 221,\r\n    // singlequote: 222,\r\n};\r\nvar func = {\r\n    Backspace: 'Backspace',\r\n    Tab: 'Tab',\r\n    Enter: 'Enter',\r\n    ShiftLeft: 'Shift',\r\n    ShiftRight: 'Shift',\r\n    ControlLeft: 'Control',\r\n    ControlRight: 'Control',\r\n    AltLeft: 'Alt',\r\n    AltRight: 'Alt',\r\n    CapsLock: 'CapsLock',\r\n    Escape: 'Escape',\r\n    Space: 'Space',\r\n    ArrowLeft: 'Left',\r\n    ArrowUp: 'Up',\r\n    ArrowRight: 'Right',\r\n    ArrowDown: 'Down',\r\n    Delete: 'Delete',\r\n    // Meta: 'Win',\r\n};\r\nvar nums = {\r\n    Backquote: \"`\",\r\n    Digit0: '0',\r\n    Digit1: '1',\r\n    Digit2: '2',\r\n    Digit3: '3',\r\n    Digit4: '4',\r\n    Digit5: '5',\r\n    Digit6: '6',\r\n    Digit7: '7',\r\n    Digit8: '8',\r\n    Digit9: '9',\r\n    Minus: '-',\r\n    Equal: '=',\r\n};\r\nvar numsShift = {\r\n    Backquote: '~',\r\n    Digit0: '!',\r\n    Digit1: '@',\r\n    Digit2: '#',\r\n    Digit3: '$',\r\n    Digit4: '%',\r\n    Digit5: '^',\r\n    Digit6: '&',\r\n    Digit7: '*',\r\n    Digit8: '(',\r\n    Digit9: ')',\r\n    Minus: '_',\r\n    Equal: '+',\r\n};\r\nvar alpabet = {\r\n    KeyA: 'a',\r\n    KeyB: 'b',\r\n    KeyC: 'c',\r\n    KeyD: 'd',\r\n    KeyE: 'e',\r\n    KeyF: 'f',\r\n    KeyG: 'g',\r\n    KeyH: 'h',\r\n    KeyI: 'i',\r\n    KeyJ: 'j',\r\n    KeyK: 'k',\r\n    KeyL: 'l',\r\n    KeyM: 'm',\r\n    KeyN: 'n',\r\n    KeyO: 'o',\r\n    KeyP: 'p',\r\n    KeyQ: 'q',\r\n    KeyR: 'r',\r\n    KeyS: 's',\r\n    KeyT: 't',\r\n    KeyU: 'u',\r\n    KeyV: 'v',\r\n    KeyW: 'w',\r\n    KeyX: 'x',\r\n    KeyY: 'y',\r\n    KeyZ: 'z',\r\n    Semicolon: ';',\r\n    Quote: \"'\",\r\n    Backslash: '\\\\',\r\n    Comma: ',',\r\n    Period: '.',\r\n    Slash: '/',\r\n    Backquote: '`',\r\n};\r\nvar alpabetAlt = {\r\n    KeyA: 'ф',\r\n    KeyB: 'и',\r\n    KeyC: 'с',\r\n    KeyD: 'в',\r\n    KeyE: 'у',\r\n    KeyF: 'а',\r\n    KeyG: 'п',\r\n    KeyH: 'р',\r\n    KeyI: 'ш',\r\n    KeyJ: 'о',\r\n    KeyK: 'л',\r\n    KeyL: 'д',\r\n    KeyM: 'ь',\r\n    KeyN: 'т',\r\n    KeyO: 'щ',\r\n    KeyP: 'з',\r\n    KeyQ: 'й',\r\n    KeyR: 'к',\r\n    KeyS: 'ы',\r\n    KeyT: 'е',\r\n    KeyU: 'г',\r\n    KeyV: 'м',\r\n    KeyW: 'ц',\r\n    KeyX: 'ч',\r\n    KeyY: 'н',\r\n    KeyZ: 'я',\r\n    Semicolon: 'ж',\r\n    Quote: 'б',\r\n    Backslash: 'ю',\r\n    Comma: 'х',\r\n    Period: 'ъ',\r\n    Slash: 'э',\r\n    Backquote: 'ё',\r\n};\r\n// const arr = {\r\n// Backspace: 'Backspace',\r\n// Tab: 'Tab',\r\n// Enter: 'Enter',\r\n// ShiftLeft: 'Shift',\r\n// ShiftRight: 'Shift',\r\n// ControlLeft: 'Control',\r\n// ControlRight: 'Control',\r\n// AltLeft: 'Alt',\r\n// AltRight: 'Alt',\r\n// CapsLock: 'CapsLock',\r\n// Escape: 'Escape',\r\n// Space: 'Space',\r\n// ArrowLeft: 'Left',\r\n// ArrowUp: 'Up',\r\n// ArrowRight: 'Right',\r\n// ArrowDown: 'Down',\r\n// Delete: 'Delete',\r\n// Digit0: '0',\r\n// Digit1: '1',\r\n// Digit2: '2',\r\n// Digit3: '3',\r\n// Digit4: '4',\r\n// Digit5: '5',\r\n// Digit6: '6',\r\n// Digit7: '7',\r\n// Digit8: '8',\r\n// Digit9: '9',\r\n// KeyA: 'a',\r\n// KeyB: 'b',\r\n// KeyC: 'c',\r\n// KeyD: 'd',\r\n// KeyE: 'e',\r\n// KeyF: 'f',\r\n// KeyG: 'g',\r\n// KeyH: 'h',\r\n// KeyI: 'i',\r\n// KeyJ: 'j',\r\n// KeyK: 'k',\r\n// KeyL: 'l',\r\n// KeyM: 'm',\r\n// KeyN: 'n',\r\n// KeyO: 'o',\r\n// KeyP: 'p',\r\n// KeyQ: 'q',\r\n// KeyR: 'r',\r\n// KeyS: 's',\r\n// KeyT: 't',\r\n// KeyU: 'u',\r\n// KeyV: 'v',\r\n// KeyW: 'w',\r\n// KeyX: 'x',\r\n// KeyY: 'y',\r\n// Key: 'z',\r\n// Semicolon: ';',\r\n// Quote: \"'\",\r\n// Backslash: '\\\\',\r\n// Comma: ',',\r\n// Period: '.',\r\n// Slash: '/',\r\n// Backquote: '`',\r\n// };\r\nexport { alpabet, nums, func, alpabetAlt, allCodes, numsShift };\r\n","var _a;\r\nimport './styles/index.scss';\r\nimport './sas';\r\nimport { Virtual } from './virtual';\r\nvar activeFunctionList = ['CapsLock', 'Shift', 'Alt', 'Control'];\r\nvar virtual = new Virtual();\r\nvar textArea = document.querySelector('.textArea');\r\nupdateKeyboard();\r\n(_a = document\r\n    .querySelector('.template'))\r\n    .append.apply(_a, virtual.createKeyboard(clickListener));\r\nfunction updateFunctionList(element) {\r\n    if (!virtual.funcList.includes(element.dataset.name)) {\r\n        virtual.pushFunc(element.dataset.name);\r\n    }\r\n    else {\r\n        var index = virtual.funcList.indexOf(element.dataset.name);\r\n        virtual.funcList.splice(index, 1);\r\n        virtual.checkActiveButton();\r\n    }\r\n}\r\nfunction funcClick(element) {\r\n    if (activeFunctionList.includes(element.dataset.name))\r\n        updateFunctionList(element);\r\n    //@ts-ignore\r\n    virtual.funcEvents[element.dataset.name]();\r\n    virtual.checkActiveButton();\r\n    virtual.checkLang();\r\n    if (virtual.isChanged)\r\n        updateKeyboard();\r\n}\r\nfunction letterClick(element) {\r\n    virtual.addLetter(element.dataset.name);\r\n    textArea.value = virtual.textArea;\r\n    if (!virtual.funcList.includes('CapsLock')) {\r\n        virtual.clearFuncList();\r\n    }\r\n    else {\r\n        virtual.clearFuncList();\r\n        virtual.pushFunc('CapsLock');\r\n    }\r\n    if (virtual.isShift) {\r\n        virtual.pressShift();\r\n    }\r\n    if (virtual.isChanged)\r\n        updateKeyboard();\r\n    textArea.value = virtual.textArea;\r\n    virtual.isShift = false;\r\n    // animateClick(element);\r\n}\r\nfunction catchClick(element) {\r\n    console.log(element);\r\n    var type = element.dataset.type;\r\n    if (type === 'func') {\r\n        funcClick(element);\r\n    }\r\n    if (type !== 'func') {\r\n        letterClick(element);\r\n    }\r\n    animateClick(element);\r\n}\r\nfunction clickListener(element) {\r\n    catchClick(element);\r\n}\r\nfunction animateClick(element) {\r\n    element.animate([\r\n        { transform: 'translate3D(0, 0, 0)' },\r\n        { transform: 'translate3D(0, 3px, 0)' },\r\n    ], 100);\r\n}\r\nfunction updateKeyboard() {\r\n    rewriteNodes();\r\n    textArea.value = virtual.textArea;\r\n    virtual.isChanged = false;\r\n}\r\nfunction rewriteNodes() {\r\n    var nodes = virtual.checkNodes(clickListener);\r\n    if (nodes.length !== 0) {\r\n        nodes.map(function (a) {\r\n            document.querySelectorAll('.' + a).forEach(function (element) {\r\n                var newElement = virtual.keyboardNodes[element.dataset.code];\r\n                element.parentNode.replaceChild(newElement, element);\r\n            });\r\n        });\r\n    }\r\n}\r\ndocument.addEventListener('keydown', function (event) {\r\n    event.preventDefault;\r\n    event.stopPropagation;\r\n    if (event.repeat == false && virtual.keyboardNodes[event.code]) {\r\n        catchClick(virtual.keyboardNodes[event.code]);\r\n    }\r\n}, false);\r\nfunction getCaret() {\r\n    return textArea.selectionStart;\r\n}\r\ntextArea.addEventListener('click', function () {\r\n    virtual.caretPosition = getCaret();\r\n});\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { createContainer, createKeyNode, keyboardTamplate } from './keyboard';\r\nimport { alpabet as letters, nums, func, alpabetAlt, numsShift, allCodes } from './keys';\r\nvar Virtual = /** @class */ (function () {\r\n    function Virtual() {\r\n        var _this = this;\r\n        this.activeFunctionList = ['CapsLock', 'AltLeft', 'AltRight', 'ShiftRight', 'ShiftLeft', 'ControlRight', 'ControlLeft'];\r\n        this.caretPosition = 0;\r\n        this.keyboardNodes = { language: '', nums: '', case: false };\r\n        this.isCapsLock = false;\r\n        this.isUpper = false;\r\n        this.isShift = false;\r\n        this.isChanged = false;\r\n        this.languageSwitch = 'eng';\r\n        this.numSwitch = 'normal';\r\n        this.alphabetKeys = { arr: letters, type: 'letters' };\r\n        this.alphabetKeysAlt = { arr: alpabetAlt, type: 'letters' };\r\n        this.numKeys = { arr: nums, type: 'nums' };\r\n        this.numsKeysShift = { arr: numsShift, type: 'nums' };\r\n        this.language = { eng: this.alphabetKeys, rus: this.alphabetKeysAlt };\r\n        this.numbers = { normal: this.numKeys, shifted: this.numsKeysShift };\r\n        this.funcKeys = {\r\n            arr: func,\r\n            type: 'func',\r\n        };\r\n        this.funcList = [];\r\n        this.keys = [this.numKeys, this.alphabetKeys, this.funcKeys];\r\n        this.commandList = { changeLang: ['Shift', 'Alt'] };\r\n        this.textArea = '';\r\n        this.nodes = {};\r\n        this.funcEvents = {\r\n            CapsLock: function () {\r\n                _this.pressCapsLock();\r\n            },\r\n            Shift: function () {\r\n                _this.pressShift();\r\n            },\r\n            Alt: function () {\r\n                _this.isChanged = true;\r\n            },\r\n            Control: function () {\r\n                _this.isChanged = true;\r\n            },\r\n            Win: function () {\r\n                _this.isChanged = true;\r\n            },\r\n            Space: function () {\r\n                _this.addLetter(' ');\r\n                _this.isChanged = true;\r\n            },\r\n            Left: function () {\r\n                _this.moveCaret(-1);\r\n            },\r\n            Right: function () {\r\n                _this.moveCaret(1);\r\n            },\r\n            Up: function () {\r\n                _this.isChanged = true;\r\n            },\r\n            Down: function () {\r\n                _this.isChanged = true;\r\n            },\r\n            Enter: function () {\r\n                _this.addLetter('\\r\\n');\r\n                _this.isChanged = true;\r\n            },\r\n            Tab: function () {\r\n                _this.textArea += '';\r\n                _this.addLetter('\\t');\r\n                _this.isChanged = true;\r\n            },\r\n            Backspace: function () {\r\n                _this.changeTextArea(_this.caretPosition - 1, 1, '', -1);\r\n                _this.isChanged = true;\r\n            },\r\n            Delete: function () {\r\n                _this.changeTextArea(_this.caretPosition, 1, '', 0);\r\n                _this.isChanged = true;\r\n            },\r\n        };\r\n    }\r\n    Virtual.prototype.addListener = function (nodes, clickListener) {\r\n        nodes.forEach(function (element) {\r\n            element.addEventListener('click', clickListener);\r\n        });\r\n    };\r\n    Virtual.prototype.createKeyboard = function (clickListener) {\r\n        var _this = this;\r\n        return Object.values(keyboardTamplate).map(function (a) {\r\n            var nodes = a.map(function (b) {\r\n                return b.arr.split(' ').map(function (key) {\r\n                    var value = allCodes[key];\r\n                    var keyNode = createKeyNode(value, key, \"key \".concat(b.type), b.type);\r\n                    _this.keyboardNodes[key] = keyNode;\r\n                    return keyNode;\r\n                });\r\n            });\r\n            _this.addListener(nodes.flat(), clickListener);\r\n            var container = createContainer(\"container-keys \");\r\n            container.append.apply(container, nodes.flat());\r\n            return container;\r\n        });\r\n    };\r\n    Virtual.prototype.clearFuncList = function () {\r\n        var _this = this;\r\n        console.log('clear');\r\n        this.getTwinList().map(function (a) {\r\n            if (_this.funcList.length != 0)\r\n                if (_this.keyboardNodes[a])\r\n                    _this.keyboardNodes[a].classList.remove('active');\r\n        });\r\n        if (this.isCapsLock && !this.keyboardNodes['CapsLock'].classList.contains('active'))\r\n            this.keyboardNodes['CapsLock'].classList.add('active');\r\n        this.funcList = [];\r\n    };\r\n    Virtual.prototype.pushFunc = function (func) {\r\n        this.funcList.push(func);\r\n    };\r\n    Virtual.prototype.toggleActiveClass = function (flag, key) {\r\n        if (flag && !this.keyboardNodes[key].classList.contains('active'))\r\n            this.keyboardNodes[key].classList.add('active');\r\n        if (!flag && this.keyboardNodes[key].classList.contains('active')) {\r\n            this.keyboardNodes[key].classList.remove('active');\r\n        }\r\n    };\r\n    Virtual.prototype.getTwinKey = function (key) {\r\n        switch (key) {\r\n            case 'Shift':\r\n                return ['ShiftRight', 'ShiftLeft'];\r\n            case 'Alt':\r\n                return ['AltLeft', 'AltRight'];\r\n            case 'Control':\r\n                return ['ControlRight', 'ControlLeft'];\r\n            default:\r\n                return [key];\r\n        }\r\n    };\r\n    Virtual.prototype.getTwinList = function () {\r\n        var _this = this;\r\n        return this.funcList.map(function (a) { return _this.getTwinKey(a); }).flat();\r\n    };\r\n    Virtual.prototype.checkActiveButton = function () {\r\n        var _this = this;\r\n        var activeButtons = this.getTwinList();\r\n        this.activeFunctionList.map(function (a) {\r\n            console.log(activeButtons.includes(a));\r\n            _this.toggleActiveClass(activeButtons.includes(a), a);\r\n            return;\r\n        });\r\n        this.toggleActiveClass(this.isCapsLock, 'CapsLock');\r\n    };\r\n    Virtual.prototype.checkLang = function () {\r\n        var _this = this;\r\n        var check = this.commandList.changeLang.every(function (a) {\r\n            return _this.funcList.includes(a);\r\n        });\r\n        if (check) {\r\n            this.isShift = false;\r\n            this.isChanged = true;\r\n            this.clearFuncList();\r\n            this.toggleNumSwitch();\r\n            this.toggleLanguage();\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Virtual.prototype.checkUpper = function () {\r\n        return (this.isCapsLock && !this.isShift) || (this.isShift && !this.isCapsLock);\r\n    };\r\n    Virtual.prototype.checkNodes = function (clickListener) {\r\n        var selector = [];\r\n        if (this.keyboardNodes.language !== this.languageSwitch || this.keyboardNodes.case !== this.checkUpper) {\r\n            this.keyboardNodes.language = this.languageSwitch;\r\n            this.updateKeyboard(this.getLetterKeys(), 'letter', clickListener);\r\n            selector.push('letter');\r\n        }\r\n        if (this.keyboardNodes.nums !== this.numSwitch) {\r\n            this.keyboardNodes.nums = this.numSwitch;\r\n            this.updateKeyboard(this.getNumKeys(), 'num', clickListener);\r\n            selector.push('num');\r\n        }\r\n        return selector;\r\n    };\r\n    Virtual.prototype.getLetterKeys = function () {\r\n        var lang = this.language[this.languageSwitch];\r\n        return !this.checkUpper() ? lang : this.toUpperCaseLetters(lang.arr);\r\n    };\r\n    Virtual.prototype.getNumKeys = function () {\r\n        return this.isShift ? this.numbers.shifted : this.numbers.normal;\r\n    };\r\n    Virtual.prototype.updateKeyboard = function (obj, className, clickListener) {\r\n        var _this = this;\r\n        var nodes = Object.entries(obj.arr).map(function (_a) {\r\n            var key = _a[0], value = _a[1];\r\n            var keyNode = createKeyNode(value, key, \"key \".concat(className, \" \"), obj.type);\r\n            _this.keyboardNodes[key] = keyNode;\r\n            return keyNode;\r\n        });\r\n        this.addListener(nodes, clickListener);\r\n        return nodes;\r\n    };\r\n    Virtual.prototype.toUpperCaseLetters = function (arr) {\r\n        var letters = Object.entries(arr).reduce(function (acc, _a) {\r\n            var _b;\r\n            var key = _a[0], value = _a[1];\r\n            return __assign(__assign({}, acc), (_b = {}, _b[key] = value.toUpperCase(), _b));\r\n        }, {});\r\n        return { arr: letters, type: 'letters' };\r\n    };\r\n    Virtual.prototype.getLetter = function (letter) {\r\n        var buf = !this.isUpper ? letter : letter.toUpperCase;\r\n        this.isShift ? this.toggleUpper() : 0;\r\n        return buf;\r\n    };\r\n    Virtual.prototype.addLetter = function (letter) {\r\n        this.changeTextArea(this.caretPosition, 0, letter, 1);\r\n    };\r\n    Virtual.prototype.moveCaret = function (step) {\r\n        var pos = this.caretPosition;\r\n        this.caretPosition = step > 0 ? (pos <= this.textArea.length ? pos + step : pos) : pos > 0 ? pos + step : pos;\r\n    };\r\n    Virtual.prototype.changeTextArea = function (position, count, item, step) {\r\n        var arr = this.textArea.split('');\r\n        arr.splice(position, count, item);\r\n        this.moveCaret(step);\r\n        this.textArea = arr.join('');\r\n    };\r\n    Virtual.prototype.toggleNumSwitch = function () {\r\n        this.numSwitch = this.numSwitch === 'normal' ? 'shifted' : 'normal';\r\n    };\r\n    Virtual.prototype.toggleLanguage = function () {\r\n        this.languageSwitch = this.languageSwitch === 'rus' ? 'eng' : 'rus';\r\n    };\r\n    Virtual.prototype.toggleUpper = function () {\r\n        this.isUpper = !this.isUpper;\r\n    };\r\n    Virtual.prototype.pressShift = function () {\r\n        this.isShift = !this.isShift;\r\n        this.toggleUpper();\r\n        this.toggleNumSwitch();\r\n        this.isChanged = true;\r\n    };\r\n    Virtual.prototype.pressCapsLock = function () {\r\n        this.toggleUpper();\r\n        this.isCapsLock = !this.isCapsLock;\r\n        this.isChanged = true;\r\n    };\r\n    return Virtual;\r\n}());\r\nexport { Virtual };\r\n"],"names":["console","log","keyboardTamplate","arr","type","createKeyNode","text","code","className","div","document","createElement","innerHTML","dataset","name","_a","allCodes","Backspace","Tab","Enter","ShiftLeft","ControlLeft","ShiftRight","ControlRight","AltLeft","AltRight","CapsLock","Escape","Space","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","Delete","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","Semicolon","Quote","Backslash","Comma","Period","Slash","Backquote","Minus","Equal","func","nums","numsShift","alpabet","alpabetAlt","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","Virtual","_this","activeFunctionList","caretPosition","keyboardNodes","language","case","isCapsLock","isUpper","isShift","isChanged","languageSwitch","numSwitch","alphabetKeys","alphabetKeysAlt","numKeys","numsKeysShift","eng","rus","numbers","normal","shifted","funcKeys","funcList","keys","commandList","changeLang","textArea","nodes","funcEvents","pressCapsLock","Shift","pressShift","Alt","Control","Win","addLetter","Left","moveCaret","Right","Up","Down","changeTextArea","addListener","clickListener","forEach","element","addEventListener","createKeyboard","values","map","a","b","split","key","keyNode","concat","flat","container","append","clearFuncList","getTwinList","classList","remove","contains","add","pushFunc","push","toggleActiveClass","flag","getTwinKey","checkActiveButton","activeButtons","includes","checkLang","check","every","toggleNumSwitch","toggleLanguage","checkUpper","checkNodes","selector","updateKeyboard","getLetterKeys","getNumKeys","lang","toUpperCaseLetters","obj","entries","letters","reduce","acc","_b","value","toUpperCase","getLetter","letter","buf","toggleUpper","step","pos","position","count","item","splice","join","virtual","querySelector","catchClick","index","indexOf","updateFunctionList","funcClick","letterClick","animate","transform","animateClick","querySelectorAll","newElement","parentNode","replaceChild","event","preventDefault","stopPropagation","repeat","selectionStart"],"sourceRoot":""}